@using iClassic.Helper;
@model iClassic.Models.Salary

@{
    ViewBag.Title = Model.Id > 0 ? "Cập nhật" : "Thêm mới";
    ViewBag.Class = "fa fa-user";
    ViewBag.Breadcrumbs = "<a href='" + Url.Action("Index") + "'>Tiền lương</a>" +
                          "<span>" + ViewBag.Title + "</span>";
}

<div class="row mb10 mt10">
    <div class="col-md-12">
        <h3 class="panel-title">
            @ViewBag.Title
        </h3>
    </div>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel panel-default">
        <div class="panel-body">
            <div class="row">
                <div class="col-md-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    <div class="form-group">
                        <label>Đối tượng</label>
                        <select name="type" id="objectType" class="form-control">
                            <option value="1" @(Model.WorkerId.HasValue ? "" : "selected")>Nhân viên</option>
                            <option value="2" @(Model.WorkerId.HasValue ? "selected" : "")>Thợ</option>
                        </select>
                    </div>
                    <div class="form-group EmployeeBox">
                        @Html.LabelFor(model => model.EmployeeId)
                        @Html.DropDownList("EmployeeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group WorkerBox">
                        @Html.LabelFor(model => model.WorkerId)
                        @Html.DropDownList("WorkerId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.WorkerId, "", new { @class = "text-danger" })
                    </div>
                    <div class="row mb10">
                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FromDate)
                                <input type="text" name="FromDate" value="@Model.FromDate.ToString("dd/MM/yyyy HH:mm:ss")" class="form-control datepicker" />
                                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                            </div>                            
                        </div>
                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ToDate)
                                <input type="text" name="ToDate" value="@Model.ToDate.ToString("dd/MM/yyyy HH:mm:ss")" class="form-control datepicker" />
                                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.TotalSalary)
                        @Html.EditorFor(model => model.TotalSalary, new { htmlAttributes = new { @class = "form-control price" } })
                        @Html.ValidationMessageFor(model => model.TotalSalary, "", new { @class = "text-danger" })
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Type)
                            <select name="Type" class="form-control">
                                @foreach (var item in Helpers.GetDSSalaryTypeList())
                                {
                                    <option value="@item.Key" @(item.Key == Model.Type ? "selected" : "")>@item.Value</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>*@
                </div>
            </div>
        </div>
    </div>
    <button class="btn btn-lightblue" type="submit" onclick="beforeSubmit();">Lưu</button>
    <a href="@Url.Action("Index")" class="btn btn-default">Quay lại</a>
}


@section Styles {
    <link href="@Url.Content("~/Content/bootstrap-datetimepicker.css")" rel="stylesheet" />
}

@section Scripts {
    <script src="@Url.Content("~/Scripts/jquery.maskMoney.min.js")"></script>
    <script src="@Url.Content("~/Scripts/moment.min.js")"></script>
    <script src="@Url.Content("~/Scripts/bootstrap-datetimepicker.min.js")"></script>
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            showHideEmployeeAndWoker();
            $('#objectType').change(function () {
                showHideEmployeeAndWoker();
            });

            $('.datepicker').datetimepicker({
                format: 'DD/MM/YYYY HH:mm:ss'
            });

            $('.price').maskMoney({ precision: 0 });
            $('.price').focus();
        });
        function showHideEmployeeAndWoker() {
            var objectType = parseInt($('#objectType').val());
            if (objectType == 1) {
                $('.EmployeeBox').slideDown();
                $('.WorkerBox').slideUp();
            } else {
                $('.EmployeeBox').slideUp();
                $('.WorkerBox').slideDown();
            }
        }
        function beforeSubmit() {
            $(".price").each(function () {
                var $this = $(this);
                var value = $this.val().replace(/,/g, '');
                $this.val(value);
            });
        }
    </script>
}
