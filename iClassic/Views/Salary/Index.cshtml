@using iClassic.Models;
@using iClassic.Helper;
@using PagedList.Mvc;
@model PagedList.IPagedList<Salary>

@{
    ViewBag.Title = "Lương thợ & nhân viên";
    ViewBag.Class = "fa fa-dollar";
    ViewBag.Breadcrumbs = ViewBag.Title;
    var searchModel = ViewBag.SearchModel as SalarySearch;
}

<div class="row mb10 mt10">
    <div class="col-md-12">
        <a href="@Url.Action("NewOrEdit")" class="btn btn-lightblue btn-sm pull-right">Thêm mới</a>
        <h3 class="panel-title">
            @ViewBag.Title
        </h3>
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Get, new { role = "form", id = "frmSearch" }))
{
    @Html.Hidden("SortName", searchModel.SortName)
    @Html.Hidden("SortOrder", searchModel.SortOrder)
    <div class="row">
        <div class="col-md-3">
            <div class="input-group">
                <input type="text" class="form-control" name="SearchText" placeholder="Tìm kiếm" value="@searchModel.SearchText">
                <span class="input-group-addon" id="btnSearch"><i class="fa fa-search"></i></span>
            </div>
        </div>
    </div>
}
<div class="table-responsive mt10">
    <table class="table table-dark" cellspacing="0">
        <tr>
            <th>
                Tiêu đề
            </th>
            <th>
                <a href="javascript:void(0)" class="sortField" data-sortName="Name">Họ tên</a>
            </th>
            <th>
                <a href="javascript:void(0)" class="sortField" data-sortName="TYPE">Chuyên môn</a>
            </th>
            <th>
                <a href="javascript:void(0)" class="sortField" data-sortName="Sanpham">Số tiền</a>
            </th>
            <th>
                <a href="javascript:void(0)" class="sortField" data-sortName="Error">Trạng thái</a>
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @item.Note
                    @if (item.WorkerId.HasValue)
                    {
                        <div>
                            (@item.FromDate.ToString("dd/MM/yyyy") -
                            @item.ToDate.ToString("dd/MM/yyyy"))
                        </div>
                    }
                </td>
                <td>
                    @if (item.AspNetUsers != null)
                    {
                        @item.AspNetUsers.Name
                        <span>(item.AspNetUsers.UserName)</span>
                    }
                    else if (item.WorkerId.HasValue)
                    {
                        @item.Tho.Name
                    }
                </td>
                <td>
                    @if (item.AspNetUsers != null)
                    {
                        <span>Nhân viên</span>
                    }
                    else if (item.WorkerId.HasValue)
                    {
                        @(((ThoTypes)item.Tho.Type).GetDescription())
                    }
                </td>
                <td>
                    @item.TotalSalary.ToString("N0") ₫
                </td>
                <td>
                    @if (item.IsPaid)
                    {
                        <div class="btn-group mr5">
                            <button type="button" class="btn btn-success btn-xs dropdown-toggle" data-toggle="dropdown">
                                Đã trả
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" role="menu">
                                <li>
                                    <a href="@Url.Action("ChangeStatus", new { id = item.Id, status = false })">
                                        Chưa trả
                                    </a>
                                </li>

                            </ul>
                        </div>
                    }
                    else
                    {
                        <div class="btn-group mr5">
                            <button type="button" class="btn btn-danger btn-xs dropdown-toggle" data-toggle="dropdown">
                                Chưa trả
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" role="menu">
                                <li>
                                    <a href="@Url.Action("ChangeStatus", new { id = item.Id, status = true })">
                                        Đã trả
                                    </a>
                                </li>

                            </ul>
                        </div>
                    }
                </td>
                <td>
                    <a href="@Url.Action("NewOrEdit", new { id=item.Id })" class="btn btn-xs btn-primary">
                        @(item.IsPaid ? "View" : "Sửa")
                    </a>
                    <a href="@Url.Action("Delete", new { id=item.Id })" class="btn btn-xs btn-danger btnConfirm">Xóa</a>
                </td>
            </tr>
        }
    </table>
</div>
<div class="row">
    <div class="col-md-12">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
        new
        {
            page,
            searchModel.SearchText,
            searchModel.SortOrder,
            searchModel.PageSize
        }))
    </div>
</div>