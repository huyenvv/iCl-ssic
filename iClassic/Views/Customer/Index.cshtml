@using iClassic.Helper;
@using iClassic.Models;
@using PagedList.Mvc;
@model PagedList.IPagedList<Customer>

@{
    ViewBag.Title = "Khách hàng";
    ViewBag.Class = "fa fa-user";
    ViewBag.Breadcrumbs = ViewBag.Title;
    var searchModel = ViewBag.SearchModel as CustomerSearch;
}

<div class="row mb10 mt10">
    <div class="col-md-12">
        <a href="@Url.Action("NewOrEdit")" class="btn btn-lightblue btn-sm pull-right">Thêm mới</a>
        <h3 class="panel-title">
            @ViewBag.Title
        </h3>
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Get, new { role = "form", id = "frmSearch" }))
{
    @Html.Hidden("SortName", searchModel.SortName)
    @Html.Hidden("SortOrder", searchModel.SortOrder)
    <div class="row">
        <div class="col-md-3">
            <select name="Group" class="form-control" onchange="this.form.submit();">
                @foreach (var item in Constant.CustomerGroup)
                {
                    <option value="@item.Key" @(item.Key == searchModel.Group ? "selected" : "")>@item.Value</option>
                }
            </select>

        </div>
        <div class="col-md-3">
            <div class="input-group">
                <input type="text" class="form-control" name="SearchText" placeholder="Tìm kiếm" value="@searchModel.SearchText">
                <span class="input-group-addon" id="btnSearch"><i class="fa fa-search"></i></span>
            </div>
        </div>
    </div>
}
<div class="table-responsive mt10">
    <table class="table table-dark" cellspacing="0">
        <tr>
            <th>
                <a href="javascript:void(0)" class="sortField" data-sortName="MaKH">Mã KH</a>
            </th>
            <th>
                <a href="javascript:void(0)" class="sortField" data-sortName="TenKH">Tên</a>
            </th>
            <th>
                <a href="javascript:void(0)" class="sortField" data-sortName="Address">Địa chỉ</a>
            </th>
            <th>
                <a href="javascript:void(0)" class="sortField" data-sortName="SoLanMay">Số lần may</a>
            </th>
            <th>
                <a href="javascript:void(0)" class="sortField" data-sortName="SoLanMay">Sản phẩm đã may</a>
            </th>
            <th>
                <a href="javascript:void(0)" class="sortField" data-sortName="SoLanMay">Sản phẩm đã sửa</a>
            </th>
            <th>
                Tổng tiền
            </th>
            <th>
                <a href="javascript:void(0)" class="sortField" data-sortName="Group">Nhóm KH</a>
            </th>
            <th></th>
        </tr>

        @{
            var stt = 1;
            foreach (var item in Model)
            {
                <tr class="stat even">
                    <td>
                        @Html.DisplayFor(modelItem => item.MaKH)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TenKH) <br />
                        (@Html.DisplayFor(modelItem => item.SDT))
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Invoice.Count)
                    </td>
                    <td>
                        @item.Invoice.Sum(n => n.PhieuSanXuat.Count)
                    </td>
                    <td>
                        @item.Invoice.Sum(n => n.PhieuSua.Count)
                    </td>
                    <td>
                        @((item.Invoice.Sum(m => (double?)m.Total) ?? 0).ToString("N0")) ₫
                    </td>
                    <td>
                        @(((CustomerTypes)item.Group).GetDescription())
                    </td>
                    <td>
                        <a href="@Url.Action("NewOrEdit", new { id = item.Id })" class="btn btn-xs btn-primary">Sửa</a>
                        @if (!User.IsInRole(RoleList.Employee))
                        {
                            <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-xs btn-danger btnConfirm">Xóa</a>
                        }
                    </td>
                </tr>
            }
        }
    </table>
</div>
<div class="row">
    <div class="col-md-12">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
        new
        {
            page,
            searchModel.Group,
            searchModel.SearchText,
            searchModel.SortOrder,
            searchModel.PageSize
        }))
    </div>
</div>