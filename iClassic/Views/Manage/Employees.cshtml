@using iClassic.Models;
@using iClassic.Helper;
@using PagedList.Mvc;
@model PagedList.IPagedList<AspNetUsers>
@{
    ViewBag.Class = "fa fa-user";
    ViewBag.Title = "Employees";
    ViewBag.Breadcrumbs = "Employees";

    var searchModel = ViewBag.SearchModel as EmployeeSearch;
}

<div class="row mb10 mt10">
    <div class="col-md-12">
        <a href="@Url.Action("AddEmployee")" class="btn btn-lightblue btn-sm pull-right">Thêm mới</a>
        <h3 class="panel-title">
            @ViewBag.Title
        </h3>
    </div>
</div>

@using (Html.BeginForm(null, null, FormMethod.Get, new { role = "form", id = "frmSearch" }))
{
    @Html.Hidden("SortName", searchModel.SortName)
    @Html.Hidden("SortOrder", searchModel.SortOrder)

    <div class="row">
        <div class="col-md-3">
            <div class="input-group">
                <input type="text" class="form-control" name="SearchText" placeholder="Tìm kiếm" value="@searchModel.SearchText">
                <span class="input-group-addon" id="btnSearch"><i class="fa fa-search"></i></span>
            </div>
        </div>
    </div>
}

<div class="table-responsive mt10">
    <table id="all" class="table table-dark" cellspacing="0">
        <tr>
            <th>STT</th>
            <th><a href="javascript:void(0)" class="sortField" data-sortName="Name">Tên</a></th>
            <th><a href="javascript:void(0)" class="sortField" data-sortName="UserName">Tài khoản</a></th>
            <th><a href="javascript:void(0)" class="sortField" data-sortName="Email">E-mail</a></th>
            <th><a href="javascript:void(0)" class="sortField" data-sortName="Branch">Chi nhánh</a></th>
            <th><a href="javascript:void(0)" class="sortField" data-sortName="Role">Vai trò</a></th>
            <th><a href="javascript:void(0)" class="sortField" data-sortName="Status">Trạng thái</a></th>
            <th>Số hóa đơn đã xử lý</th>
            <th>Lương cứng</th>
            <th></th>
        </tr>

        @{
            var stt = 1;
            foreach (var item in Model)
            {
                <tr class="stat even">
                    <td class="ac">
                        @(stt++)
                    </td>
                    <td>
                        <a href="@Url.Action("EditEmployee", new { id = item.Id })" title="@item.Name">@item.Name</a>
                        <br />
                        @(!string.IsNullOrEmpty(item.PhoneNumber) ? "(" + item.PhoneNumber + ")" : "")

                    </td>
                    <td>
                        <a href="@Url.Action("EditEmployee", new { id = item.Id })" title="@item.UserName">@item.UserName</a>
                    </td>
                    <td>
                        @item.Email
                    </td>
                    <td>
                        @item.Branch.Name
                    </td>
                    <td>
                        @Helpers.GetDescriptionRole(item.AspNetRoles.FirstOrDefault())
                    </td>
                    <td>
                        @if (item.IsActive)
                        {
                            <span class="label label-success">Hoạt động</span>
                        }
                        else
                        {
                            <span class="label label-danger">Ngừng hoạt động</span>
                        }
                    </td>
                    <td>
                        @item.Invoice1.Count
                    </td>
                    <td>
                        @((item.Salary.HasValue? item.Salary.Value: 0).ToString("N0")) đ
                    </td>
                    <td>
                        <a href="@Url.Action("EditEmployee", new { id=item.Id })" class="btn btn-xs btn-primary">Sửa</a>
                        <a href="@Url.Action("SetPasswordEmployee", new { id=item.Id })" class="btn btn-xs btn-primary">Đổi mật khẩu</a>
                        <a href="@Url.Action("DeleteEmployee", new { id=item.Id })" class="btn btn-xs btn-danger btnConfirm">Xóa</a>
                    </td>
                </tr>
            }
        }
    </table>
</div><!-- table-responsive -->
<div class="row">
    <div class="col-md-12">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action(null,
        new
        {
            page,
            searchModel.SearchText,
            searchModel.SortOrder,
            searchModel.PageSize
        }))
    </div>
</div>
@section styles{
    <style>
        #btnSearch:hover {
            cursor: pointer;
        }
    </style>
}